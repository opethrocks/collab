[{"/Users/matt/projects/collab/client/src/index.js":"1","/Users/matt/projects/collab/client/src/App.js":"2","/Users/matt/projects/collab/client/src/reportWebVitals.js":"3","/Users/matt/projects/collab/client/src/context/userContext.js":"4","/Users/matt/projects/collab/client/src/context/messageContext.js":"5","/Users/matt/projects/collab/client/src/components/Login.js":"6","/Users/matt/projects/collab/client/src/components/Register.js":"7","/Users/matt/projects/collab/client/src/components/NavMenu.js":"8","/Users/matt/projects/collab/client/src/components/Messages.js":"9","/Users/matt/projects/collab/client/src/hooks/useLogin.js":"10","/Users/matt/projects/collab/client/src/components/Dashboard.js":"11","/Users/matt/projects/collab/client/src/components/Input.js":"12","/Users/matt/projects/collab/client/src/hooks/useRegister.js":"13","/Users/matt/projects/collab/client/src/components/SideMenu.js":"14","/Users/matt/projects/collab/client/src/hooks/useMessage.js":"15","/Users/matt/projects/collab/client/src/socket.js":"16"},{"size":778,"mtime":1613167639267,"results":"17","hashOfConfig":"18"},{"size":2087,"mtime":1617975016395,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608671060942,"results":"20","hashOfConfig":"18"},{"size":595,"mtime":1615821969965,"results":"21","hashOfConfig":"18"},{"size":417,"mtime":1615663741641,"results":"22","hashOfConfig":"18"},{"size":2221,"mtime":1617974849332,"results":"23","hashOfConfig":"18"},{"size":2956,"mtime":1617975116043,"results":"24","hashOfConfig":"18"},{"size":1287,"mtime":1617890388767,"results":"25","hashOfConfig":"18"},{"size":3353,"mtime":1617889548333,"results":"26","hashOfConfig":"18"},{"size":1325,"mtime":1617471465157,"results":"27","hashOfConfig":"18"},{"size":659,"mtime":1614945437072,"results":"28","hashOfConfig":"18"},{"size":1630,"mtime":1617974959926,"results":"29","hashOfConfig":"18"},{"size":1501,"mtime":1617554442703,"results":"30","hashOfConfig":"18"},{"size":538,"mtime":1617975090914,"results":"31","hashOfConfig":"18"},{"size":3075,"mtime":1617796514355,"results":"32","hashOfConfig":"18"},{"size":202,"mtime":1615659691175,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"92kho2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/matt/projects/collab/client/src/index.js",[],["69","70"],"/Users/matt/projects/collab/client/src/App.js",[],"/Users/matt/projects/collab/client/src/reportWebVitals.js",[],"/Users/matt/projects/collab/client/src/context/userContext.js",[],"/Users/matt/projects/collab/client/src/context/messageContext.js",[],"/Users/matt/projects/collab/client/src/components/Login.js",[],"/Users/matt/projects/collab/client/src/components/Register.js",[],"/Users/matt/projects/collab/client/src/components/NavMenu.js",[],"/Users/matt/projects/collab/client/src/components/Messages.js",["71","72","73","74"],"import React, { useContext, useEffect, useRef } from 'react';\nimport useMessage from '../hooks/useMessage';\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { MessageContext } from '../context/messageContext';\nimport { v4 as uuidv4 } from 'uuid';\nimport { UserContext } from '../context/userContext';\nimport socket from '../socket';\nimport SideMenu from './SideMenu';\nimport styles from '../styles/Messages.module.css';\n\nlibrary.add(fas, far, fab);\n\ndom.i2svg();\n\nfunction Messages() {\n  const [msgState, setMsgState] = useContext(MessageContext);\n  const [state, setState] = useContext(UserContext);\n  const { sendMessage, checkAuth, webSocket } = useMessage();\n\n  const chat = useRef(null);\n\n  useEffect(() => {\n    chat.current.scrollTop =\n      chat.current.scrollHeight - chat.current.clientHeight;\n  });\n\n  useEffect(() => {\n    checkAuth();\n    //Open websocket connection\n    const { username } = state;\n    socket.connect();\n    socket.auth = { username };\n    webSocket();\n  }, []);\n\n  const handleSend = () => {\n    sendMessage();\n  };\n\n  const handleMessages = function () {\n    return msgState.messages.map((msg) => {\n      msgState.incoming ? (\n        <div>\n          <div className={styles.incoming}>\n            <p>From {msgState.user}</p>\n            <p>{msg.timestamp}</p>\n            <div className={styles.incoming}>\n              <p className={styles.message}>{msg.text}</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={styles.outgoing}>\n          <p>{msg.timestamp}</p>\n          <div className={styles.outgoing}>\n            <p className={styles.message}>{msg.text}</p>\n          </div>\n        </div>\n      );\n    });\n    // return msgState.messages.map((msg) =>\n    //   msg.incoming ? (\n    //     <div>\n    //       <div className=\"incoming-flex\" key={uuidv4()}>\n    //         {msgState.user && (\n    //           <div>\n    //             <p>From {msgState.user}</p>\n    //             <p>{msg.timestamp}</p>\n    //           </div>\n    //         )}\n    //       </div>\n    //       <div className=\"incoming-flex\">\n    //         <div className=\"incoming-message\">\n    //           <p className=\"message\">{msg.text}</p>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   ) : (\n    //     <div className=\"outgoing-flex\" key={uuidv4()}>\n    //       <p>{msg.timestamp}</p>\n    //       <div className=\"outgoing-message\">\n    //         <p className=\"message\">{msg.text}</p>\n    //       </div>\n    //     </div>\n    //   )\n    // );\n  };\n\n  const handleChange = (e) => {\n    setMsgState((msgState) => ({ ...msgState, text: e.target.value }));\n  };\n\n  return (\n    <div>\n      <SideMenu />\n      <div className={styles.Messages}>\n        <div className={styles.chat} ref={chat}>\n          {/* {handleMessages()} */}\n          <div key={uuidv4()}>{handleMessages}</div>\n        </div>\n\n        <form>\n          <textarea value={msgState.text} onChange={handleChange}></textarea>\n          <button onClick={handleSend}>\n            <img className=\"fas fa-paper-plane fa-2x\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Messages;\n","/Users/matt/projects/collab/client/src/hooks/useLogin.js",[],"/Users/matt/projects/collab/client/src/components/Dashboard.js",[],"/Users/matt/projects/collab/client/src/components/Input.js",[],"/Users/matt/projects/collab/client/src/hooks/useRegister.js",[],"/Users/matt/projects/collab/client/src/components/SideMenu.js",[],"/Users/matt/projects/collab/client/src/hooks/useMessage.js",["75","76"],"import { useContext } from 'react';\nimport { MessageContext } from '../context/messageContext';\nimport { UserContext } from '../context/userContext';\nimport socket from '../socket';\nimport axios from 'axios';\n\nconst UseMessage = () => {\n  const [msgState, setMsgState] = useContext(MessageContext);\n  const [state, setState] = useContext(UserContext);\n\n  function recieveMessage(event) {\n    let msg = JSON.parse(event);\n    setMsgState({\n      ...msgState,\n      user: msg.username,\n      messages: msgState.messages.concat({\n        text: msg.text,\n        incoming: true,\n        timestamp: new Date().toLocaleString(),\n      }),\n    });\n  }\n\n  function sendMessage() {\n    const message = {\n      username: state.username,\n      text: msgState.text,\n    };\n\n    handleSend();\n  }\n\n  function formatDate(date) {\n    const calcDaysPassed = (date1, date2) =>\n      Math.round(Math.abs((date2 - date1) / (1000 * 60 * 60 * 24)));\n\n    const daysPassed = calcDaysPassed(new Date(), date);\n\n    const hour = date.getHours();\n    const minutes = `${date.getMinutes()}`.padEnd(2, 0);\n    const amOrPm = `${hour < 12 ? 'AM' : 'PM'}`;\n\n    if (daysPassed === 0) return `Today at ${hour}:${minutes} ${amOrPm}`;\n    if (daysPassed === 1) return `Yesterday at ${hour}:${minutes} ${amOrPm}`;\n    if (daysPassed >= 7) return `${daysPassed} days ago`;\n    else {\n      return new Intl.DateTimeFormat(navigator.locale).format();\n    }\n  }\n\n  function handleSend() {\n    const date = new Date();\n\n    setMsgState({\n      ...msgState,\n      text: '',\n      messages: msgState.messages.concat({\n        text: msgState.text,\n        incoming: false,\n        timestamp: formatDate(date),\n      }),\n    });\n  }\n\n  async function checkAuth() {\n    try {\n      await axios.post('/api/messages');\n    } catch (err) {\n      setState({\n        ...state,\n        authenticated: false,\n        status: err.response?.data.msg,\n      });\n    }\n  }\n\n  function webSocket() {\n    //Get username from userContext and assign it to\n    //socket.auth and connect socket to server\n    const { username } = state;\n    socket.auth = { username };\n    socket.connect();\n\n    //Display error messages to console\n    //Will implement error messages in UI soon\n    socket.on('connect_error', (err) => {\n      if (err.message === 'invalid username') {\n        console.log(err.message, username);\n      }\n    });\n\n    //Build user object\n    socket.on('users', (users) => {\n      users.forEach((user) => {\n        user.self = user.userID === socket.id;\n      });\n      //put the current user first and then sort by username\n      const userList = users.sort((a, b) => {\n        if (a.self) return -1;\n        if (b.self) return 1;\n        if (a.username < b.username) return -1;\n        return a.username > b.username ? 1 : 0;\n      });\n      setState({ ...state, users: new Set(userList) });\n    });\n    //When user connects add username to state.users\n    socket.on('user connected', (user) => {\n      state.users.add(user);\n    });\n  }\n\n  return { sendMessage, checkAuth, webSocket };\n};\n\nexport default UseMessage;\n","/Users/matt/projects/collab/client/src/socket.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":20,"column":17,"nodeType":"83","messageId":"84","endLine":20,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":37,"column":6,"nodeType":"87","endLine":37,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":44,"column":40,"nodeType":"91","messageId":"92","endLine":44,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":108,"column":13,"nodeType":"95","endLine":108,"endColumn":57},{"ruleId":"81","severity":1,"message":"96","line":11,"column":12,"nodeType":"83","messageId":"84","endLine":11,"endColumn":26},{"ruleId":"81","severity":1,"message":"97","line":25,"column":11,"nodeType":"83","messageId":"84","endLine":25,"endColumn":18},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuth', 'state', and 'webSocket'. Either include them or remove the dependency array.","ArrayExpression",["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'recieveMessage' is defined but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [checkAuth, state, webSocket]",{"range":"103","text":"104"},[1186,1188],"[checkAuth, state, webSocket]"]